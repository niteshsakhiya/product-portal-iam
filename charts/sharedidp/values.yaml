keycloak:
  image:
    tag: 16.1.1-debian-10-r103
  auth:
    adminUser: admin
    existingSecret: sharedidp-keycloak
  proxyAddressForwarding: true
  serviceDiscovery:
    enabled: true
  extraEnvVars:
    - name: KEYCLOAK_USER
      value: "admin"
    - name: KEYCLOAK_PASSWORD
      valueFrom:
        secretKeyRef:
          name: sharedidp-keycloak
          key: admin-password
    - name: CACHE_OWNERS_COUNT
      value: "3"
    - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
      value: "3"
    - name: KEYCLOAK_EXTRA_ARGS
      value: "-Dkeycloak.migration.action=import -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/realms -Dkeycloak.migration.strategy=IGNORE_EXISTING"
    - name: KEYCLOAK_DATABASE_HOST
      value: ftcpro-postgresql-primary.postgres
  replicaCount: 1
  extraVolumes:
    - name: themes
      emptyDir: {}
    - name: realms
      emptyDir: {}
  extraVolumeMounts:
    - name: themes
      mountPath: "/opt/bitnami/keycloak/themes/catenax-shared"
    - name: realms
      mountPath: "/realms"
  initContainers:
    - name: import
      image: ftcpro.azurecr.io/keycloak/product-portal-iam_iam-import-dev:latest
      imagePullPolicy: Always
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying themes..."
          cp -R /import/themes/catenax-shared/* /themes
          echo "Copying realms..."
          cp -R /import/catenax-shared/realms/* /realms
      volumeMounts:
      - name: themes
        mountPath: "/themes"
      - name: realms
        mountPath: "/realms"
  service:
    type: ClusterIP
    sessionAffinity: ClientIP
  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: sharedidp.dev.demo.ftcpro.co
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
      nginx.ingress.kubernetes.io/cors-allow-origin: https://portal.dev.demo.ftcpro.co
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
      nginx.ingress.kubernetes.io/use-regex: "true"
    tls: true
  rbac:
    create: true
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
  postgresql:
    enabled: false
    # auth:
    #   username: kcshared
    #   database: iamsharedidp
    #   existingSecret: sharedidp-postgres
    # architecture: replication
  externalDatabase:
    host: "ftcpro-postgresql-primary.postgres"
    port: 5432
    user: "postgres"
    database: "iamsharedidp"
    existingSecret: sharedidp-postgres
    secret:
      path: portal/data/dev/iam/sharedidp-postgres

secrets:
  auth:
    existingSecret:
      adminpassword: "<path:portal/data/dev/iam/sharedidp-keycloak#admin-password>"
      managementpassword: "<path:portal/data/dev/iam/sharedidp-keycloak#management-password>"
  postgresql:
    auth:
      existingSecret:
        postgrespassword: "<path:portal/data/dev/iam/sharedidp-postgres#postgres-password>"
        password: "<path:portal/data/dev/iam/sharedidp-postgres#password>"
        replicationPassword: "<path:portal/data/dev/iam/sharedidp-postgres#replication-password>"
  realmuser:
    enabled: false
    cxtestaccessuser: "<path:portal/data/dev/iam/sharedidp-realms#CX-Test-Access-users-0.json>"
    company1user: "<path:portal/data/dev/iam/sharedidp-realms#Company-1-users-0.json>"
    company2user: "<path:portal/data/dev/iam/sharedidp-realms#Company-2-users-0.json>"
    company3user: "<path:portal/data/dev/iam/sharedidp-realms#Company-3-users-0.json>"
    masteruser: "<path:portal/data/dev/iam/sharedidp-realms#Company-1-users-0.json>"


